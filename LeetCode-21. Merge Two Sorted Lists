Problem Statement : - 

Merge two sorted linked lists and return it as a new sorted list. The new list should be made by splicing together the nodes of the first two lists.

Example:

Input: 1->2->4, 1->3->4
Output: 1->1->2->3->4->4


Class Defination : -

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 

Solution : - 

class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode resultList = new ListNode(-1);
	    ListNode head = resultList;
	
        while (l1 != null && l2 != null) {
		    if (l1.val < l2.val) {
			    head.next = l1;
			    l1 = l1.next;
		    } else {
			    head.next = l2;
			    l2 = l2.next;
		    }
		    head.next.next = null;
		    head = head.next;
	    }   

	    if (l1 != null)
		    head.next = l1;
	    else
		    head.next = l2;

	    return resultList.next;
    }
}

